// <auto-generated />
using System;
using AlloPharma.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlloPharma.Api.Migrations
{
    [DbContext(typeof(AlloPharmaDbContext))]
    partial class AlloPharmaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlloPharma.Api.Models.Demande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RayonRechercheKm")
                        .HasColumnType("integer");

                    b.Property<int>("Statut")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("AlloPharma.Api.Models.DemandeItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DemandeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MedicamentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DemandeId");

                    b.ToTable("DemandeItems");
                });

            modelBuilder.Entity("AlloPharma.Api.Models.Medicament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NomComplet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Medicaments");
                });

            modelBuilder.Entity("AlloPharma.Api.Models.Pharmacy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdresseTexte")
                        .HasColumnType("text");

                    b.Property<string>("Commune")
                        .HasColumnType("text");

                    b.Property<Point>("Coordonnees")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsVisibleSurCarte")
                        .HasColumnType("boolean");

                    b.Property<string>("NomPharmacie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomPharmacien")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quartier")
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Telephone")
                        .IsUnique();

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("AlloPharma.Api.Models.DemandeItem", b =>
                {
                    b.HasOne("AlloPharma.Api.Models.Demande", null)
                        .WithMany("Items")
                        .HasForeignKey("DemandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlloPharma.Api.Models.Demande", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
